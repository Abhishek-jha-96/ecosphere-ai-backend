services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: ecosphere-ai-backend
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./src:/src:Z
    depends_on:
      - database
      - redis

  database:
    image: postgres:16
    container_name: ecosphere-ai-database
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: ecosphere-ai-redis
    ports:
      - "6379:6379"

  celery:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: ecosphere-ai-celery
    command: python -m celery -A core.celery_app worker --loglevel=INFO
    env_file:
      - .env
    volumes:
      - ./src:/src:Z
    depends_on:
      - backend
      - redis
      - database

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    container_name: ecosphere-ai-celery-beat
    command: python -m celery -A core.celery_app beat --loglevel=INFO
    env_file:
      - .env
    volumes:
      - ./src:/src:Z
    depends_on:
      - backend
      - redis
      - database

volumes:
  postgres_data:
